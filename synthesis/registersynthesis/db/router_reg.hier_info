|router_reg
clock => err~reg0.CLK
clock => low_pkt_valid~reg0.CLK
clock => parity_done~reg0.CLK
clock => dout[0]~reg0.CLK
clock => dout[1]~reg0.CLK
clock => dout[2]~reg0.CLK
clock => dout[3]~reg0.CLK
clock => dout[4]~reg0.CLK
clock => dout[5]~reg0.CLK
clock => dout[6]~reg0.CLK
clock => dout[7]~reg0.CLK
clock => packet_parity[0].CLK
clock => packet_parity[1].CLK
clock => packet_parity[2].CLK
clock => packet_parity[3].CLK
clock => packet_parity[4].CLK
clock => packet_parity[5].CLK
clock => packet_parity[6].CLK
clock => packet_parity[7].CLK
clock => internal_parity[0].CLK
clock => internal_parity[1].CLK
clock => internal_parity[2].CLK
clock => internal_parity[3].CLK
clock => internal_parity[4].CLK
clock => internal_parity[5].CLK
clock => internal_parity[6].CLK
clock => internal_parity[7].CLK
clock => fullstate_byte[0].CLK
clock => fullstate_byte[1].CLK
clock => fullstate_byte[2].CLK
clock => fullstate_byte[3].CLK
clock => fullstate_byte[4].CLK
clock => fullstate_byte[5].CLK
clock => fullstate_byte[6].CLK
clock => fullstate_byte[7].CLK
clock => header_byte[0].CLK
clock => header_byte[1].CLK
clock => header_byte[2].CLK
clock => header_byte[3].CLK
clock => header_byte[4].CLK
clock => header_byte[5].CLK
clock => header_byte[6].CLK
clock => header_byte[7].CLK
resetn => err.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => header_byte.OUTPUTSELECT
resetn => header_byte.OUTPUTSELECT
resetn => header_byte.OUTPUTSELECT
resetn => header_byte.OUTPUTSELECT
resetn => header_byte.OUTPUTSELECT
resetn => header_byte.OUTPUTSELECT
resetn => header_byte.OUTPUTSELECT
resetn => header_byte.OUTPUTSELECT
resetn => fullstate_byte.OUTPUTSELECT
resetn => fullstate_byte.OUTPUTSELECT
resetn => fullstate_byte.OUTPUTSELECT
resetn => fullstate_byte.OUTPUTSELECT
resetn => fullstate_byte.OUTPUTSELECT
resetn => fullstate_byte.OUTPUTSELECT
resetn => fullstate_byte.OUTPUTSELECT
resetn => fullstate_byte.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => parity_done.OUTPUTSELECT
resetn => low_pkt_valid.OUTPUTSELECT
pkt_valid => header_byte.OUTPUTSELECT
pkt_valid => header_byte.OUTPUTSELECT
pkt_valid => header_byte.OUTPUTSELECT
pkt_valid => header_byte.OUTPUTSELECT
pkt_valid => header_byte.OUTPUTSELECT
pkt_valid => header_byte.OUTPUTSELECT
pkt_valid => header_byte.OUTPUTSELECT
pkt_valid => header_byte.OUTPUTSELECT
pkt_valid => always0.IN1
pkt_valid => always1.IN0
pkt_valid => always1.IN1
pkt_valid => always1.IN0
data_in[0] => header_byte.DATAB
data_in[0] => fullstate_byte.DATAB
data_in[0] => dout.DATAA
data_in[0] => internal_parity.IN1
data_in[0] => packet_parity.DATAB
data_in[1] => header_byte.DATAB
data_in[1] => fullstate_byte.DATAB
data_in[1] => dout.DATAA
data_in[1] => internal_parity.IN1
data_in[1] => packet_parity.DATAB
data_in[2] => header_byte.DATAB
data_in[2] => fullstate_byte.DATAB
data_in[2] => dout.DATAA
data_in[2] => internal_parity.IN1
data_in[2] => packet_parity.DATAB
data_in[3] => header_byte.DATAB
data_in[3] => fullstate_byte.DATAB
data_in[3] => dout.DATAA
data_in[3] => internal_parity.IN1
data_in[3] => packet_parity.DATAB
data_in[4] => header_byte.DATAB
data_in[4] => fullstate_byte.DATAB
data_in[4] => dout.DATAA
data_in[4] => internal_parity.IN1
data_in[4] => packet_parity.DATAB
data_in[5] => header_byte.DATAB
data_in[5] => fullstate_byte.DATAB
data_in[5] => dout.DATAA
data_in[5] => internal_parity.IN1
data_in[5] => packet_parity.DATAB
data_in[6] => header_byte.DATAB
data_in[6] => fullstate_byte.DATAB
data_in[6] => dout.DATAA
data_in[6] => internal_parity.IN1
data_in[6] => packet_parity.DATAB
data_in[7] => header_byte.DATAB
data_in[7] => fullstate_byte.DATAB
data_in[7] => dout.DATAA
data_in[7] => internal_parity.IN1
data_in[7] => packet_parity.DATAB
fifo_full => fullstate_byte.OUTPUTSELECT
fifo_full => fullstate_byte.OUTPUTSELECT
fifo_full => fullstate_byte.OUTPUTSELECT
fifo_full => fullstate_byte.OUTPUTSELECT
fifo_full => fullstate_byte.OUTPUTSELECT
fifo_full => fullstate_byte.OUTPUTSELECT
fifo_full => fullstate_byte.OUTPUTSELECT
fifo_full => fullstate_byte.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => dout.OUTPUTSELECT
fifo_full => always1.IN0
rst_int_reg => header_byte.OUTPUTSELECT
rst_int_reg => header_byte.OUTPUTSELECT
rst_int_reg => header_byte.OUTPUTSELECT
rst_int_reg => header_byte.OUTPUTSELECT
rst_int_reg => header_byte.OUTPUTSELECT
rst_int_reg => header_byte.OUTPUTSELECT
rst_int_reg => header_byte.OUTPUTSELECT
rst_int_reg => header_byte.OUTPUTSELECT
rst_int_reg => fullstate_byte.OUTPUTSELECT
rst_int_reg => fullstate_byte.OUTPUTSELECT
rst_int_reg => fullstate_byte.OUTPUTSELECT
rst_int_reg => fullstate_byte.OUTPUTSELECT
rst_int_reg => fullstate_byte.OUTPUTSELECT
rst_int_reg => fullstate_byte.OUTPUTSELECT
rst_int_reg => fullstate_byte.OUTPUTSELECT
rst_int_reg => fullstate_byte.OUTPUTSELECT
rst_int_reg => internal_parity.OUTPUTSELECT
rst_int_reg => internal_parity.OUTPUTSELECT
rst_int_reg => internal_parity.OUTPUTSELECT
rst_int_reg => internal_parity.OUTPUTSELECT
rst_int_reg => internal_parity.OUTPUTSELECT
rst_int_reg => internal_parity.OUTPUTSELECT
rst_int_reg => internal_parity.OUTPUTSELECT
rst_int_reg => internal_parity.OUTPUTSELECT
rst_int_reg => packet_parity.OUTPUTSELECT
rst_int_reg => packet_parity.OUTPUTSELECT
rst_int_reg => packet_parity.OUTPUTSELECT
rst_int_reg => packet_parity.OUTPUTSELECT
rst_int_reg => packet_parity.OUTPUTSELECT
rst_int_reg => packet_parity.OUTPUTSELECT
rst_int_reg => packet_parity.OUTPUTSELECT
rst_int_reg => packet_parity.OUTPUTSELECT
rst_int_reg => low_pkt_valid.OUTPUTSELECT
rst_int_reg => dout[0]~reg0.ENA
rst_int_reg => dout[1]~reg0.ENA
rst_int_reg => dout[2]~reg0.ENA
rst_int_reg => dout[3]~reg0.ENA
rst_int_reg => dout[4]~reg0.ENA
rst_int_reg => dout[5]~reg0.ENA
rst_int_reg => dout[6]~reg0.ENA
rst_int_reg => dout[7]~reg0.ENA
detect_add => header_byte.OUTPUTSELECT
detect_add => header_byte.OUTPUTSELECT
detect_add => header_byte.OUTPUTSELECT
detect_add => header_byte.OUTPUTSELECT
detect_add => header_byte.OUTPUTSELECT
detect_add => header_byte.OUTPUTSELECT
detect_add => header_byte.OUTPUTSELECT
detect_add => header_byte.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => dout.OUTPUTSELECT
detect_add => fullstate_byte.OUTPUTSELECT
detect_add => fullstate_byte.OUTPUTSELECT
detect_add => fullstate_byte.OUTPUTSELECT
detect_add => fullstate_byte.OUTPUTSELECT
detect_add => fullstate_byte.OUTPUTSELECT
detect_add => fullstate_byte.OUTPUTSELECT
detect_add => fullstate_byte.OUTPUTSELECT
detect_add => fullstate_byte.OUTPUTSELECT
detect_add => parity_done.OUTPUTSELECT
ld_state => fullstate_byte.OUTPUTSELECT
ld_state => fullstate_byte.OUTPUTSELECT
ld_state => fullstate_byte.OUTPUTSELECT
ld_state => fullstate_byte.OUTPUTSELECT
ld_state => fullstate_byte.OUTPUTSELECT
ld_state => fullstate_byte.OUTPUTSELECT
ld_state => fullstate_byte.OUTPUTSELECT
ld_state => fullstate_byte.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => dout.OUTPUTSELECT
ld_state => always0.IN0
ld_state => always1.IN1
ld_state => always1.IN1
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => always1.IN1
full_state => always0.IN1
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => fullstate_byte.OUTPUTSELECT
lfd_state => fullstate_byte.OUTPUTSELECT
lfd_state => fullstate_byte.OUTPUTSELECT
lfd_state => fullstate_byte.OUTPUTSELECT
lfd_state => fullstate_byte.OUTPUTSELECT
lfd_state => fullstate_byte.OUTPUTSELECT
lfd_state => fullstate_byte.OUTPUTSELECT
lfd_state => fullstate_byte.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => packet_parity.OUTPUTSELECT
lfd_state => packet_parity.OUTPUTSELECT
lfd_state => packet_parity.OUTPUTSELECT
lfd_state => packet_parity.OUTPUTSELECT
lfd_state => packet_parity.OUTPUTSELECT
lfd_state => packet_parity.OUTPUTSELECT
lfd_state => packet_parity.OUTPUTSELECT
lfd_state => packet_parity.OUTPUTSELECT
parity_done <= parity_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
low_pkt_valid <= low_pkt_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
err <= err~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


