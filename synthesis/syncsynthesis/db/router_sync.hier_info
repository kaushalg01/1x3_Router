|router_sync
detect_add => tempaddr.OUTPUTSELECT
detect_add => tempaddr.OUTPUTSELECT
write_enb_reg => write_enb[0]$latch.LATCH_ENABLE
write_enb_reg => write_enb[1]$latch.LATCH_ENABLE
write_enb_reg => write_enb[2]$latch.LATCH_ENABLE
clock => soft_reset_2~reg0.CLK
clock => counter2[0].CLK
clock => counter2[1].CLK
clock => counter2[2].CLK
clock => counter2[3].CLK
clock => counter2[4].CLK
clock => soft_reset_1~reg0.CLK
clock => counter1[0].CLK
clock => counter1[1].CLK
clock => counter1[2].CLK
clock => counter1[3].CLK
clock => counter1[4].CLK
clock => soft_reset_0~reg0.CLK
clock => counter0[0].CLK
clock => counter0[1].CLK
clock => counter0[2].CLK
clock => counter0[3].CLK
clock => counter0[4].CLK
clock => tempaddr[0].CLK
clock => tempaddr[1].CLK
resetn => counter0.OUTPUTSELECT
resetn => counter0.OUTPUTSELECT
resetn => counter0.OUTPUTSELECT
resetn => counter0.OUTPUTSELECT
resetn => counter0.OUTPUTSELECT
resetn => soft_reset_0.OUTPUTSELECT
resetn => counter1.OUTPUTSELECT
resetn => counter1.OUTPUTSELECT
resetn => counter1.OUTPUTSELECT
resetn => counter1.OUTPUTSELECT
resetn => counter1.OUTPUTSELECT
resetn => soft_reset_1.OUTPUTSELECT
resetn => counter2.OUTPUTSELECT
resetn => counter2.OUTPUTSELECT
resetn => counter2.OUTPUTSELECT
resetn => counter2.OUTPUTSELECT
resetn => counter2.OUTPUTSELECT
resetn => soft_reset_2.OUTPUTSELECT
resetn => tempaddr.OUTPUTSELECT
resetn => tempaddr.OUTPUTSELECT
read_enb_0 => soft_reset_0.OUTPUTSELECT
read_enb_0 => counter0.OUTPUTSELECT
read_enb_0 => counter0.OUTPUTSELECT
read_enb_0 => counter0.OUTPUTSELECT
read_enb_0 => counter0.OUTPUTSELECT
read_enb_0 => counter0.OUTPUTSELECT
read_enb_1 => soft_reset_1.OUTPUTSELECT
read_enb_1 => counter1.OUTPUTSELECT
read_enb_1 => counter1.OUTPUTSELECT
read_enb_1 => counter1.OUTPUTSELECT
read_enb_1 => counter1.OUTPUTSELECT
read_enb_1 => counter1.OUTPUTSELECT
read_enb_2 => soft_reset_2.OUTPUTSELECT
read_enb_2 => counter2.OUTPUTSELECT
read_enb_2 => counter2.OUTPUTSELECT
read_enb_2 => counter2.OUTPUTSELECT
read_enb_2 => counter2.OUTPUTSELECT
read_enb_2 => counter2.OUTPUTSELECT
empty_0 => soft_reset_0.OUTPUTSELECT
empty_0 => counter0.OUTPUTSELECT
empty_0 => counter0.OUTPUTSELECT
empty_0 => counter0.OUTPUTSELECT
empty_0 => counter0.OUTPUTSELECT
empty_0 => counter0.OUTPUTSELECT
empty_0 => vld_out_0.DATAIN
empty_1 => soft_reset_1.OUTPUTSELECT
empty_1 => counter1.OUTPUTSELECT
empty_1 => counter1.OUTPUTSELECT
empty_1 => counter1.OUTPUTSELECT
empty_1 => counter1.OUTPUTSELECT
empty_1 => counter1.OUTPUTSELECT
empty_1 => vld_out_1.DATAIN
empty_2 => soft_reset_2.OUTPUTSELECT
empty_2 => counter2.OUTPUTSELECT
empty_2 => counter2.OUTPUTSELECT
empty_2 => counter2.OUTPUTSELECT
empty_2 => counter2.OUTPUTSELECT
empty_2 => counter2.OUTPUTSELECT
empty_2 => vld_out_2.DATAIN
full_0 => Mux0.IN1
full_1 => Mux0.IN2
full_2 => Mux0.IN3
data_in[0] => tempaddr.DATAB
data_in[1] => tempaddr.DATAB
soft_reset_0 <= soft_reset_0~reg0.DB_MAX_OUTPUT_PORT_TYPE
soft_reset_1 <= soft_reset_1~reg0.DB_MAX_OUTPUT_PORT_TYPE
soft_reset_2 <= soft_reset_2~reg0.DB_MAX_OUTPUT_PORT_TYPE
fifo_full <= fifo_full$latch.DB_MAX_OUTPUT_PORT_TYPE
write_enb[0] <= write_enb[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
write_enb[1] <= write_enb[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
write_enb[2] <= write_enb[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
vld_out_0 <= empty_0.DB_MAX_OUTPUT_PORT_TYPE
vld_out_1 <= empty_1.DB_MAX_OUTPUT_PORT_TYPE
vld_out_2 <= empty_2.DB_MAX_OUTPUT_PORT_TYPE


